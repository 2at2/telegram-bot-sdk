
(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href=".html">Telegram</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Telegram_Bot" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Telegram/Bot.html">Bot</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Telegram_Bot_Commands" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Telegram/Bot/Commands.html">Commands</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Telegram_Bot_Commands_Command" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Commands/Command.html">Command</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Commands_CommandBus" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Commands/CommandBus.html">CommandBus</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Commands_CommandInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Commands/CommandInterface.html">CommandInterface</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Commands_HelpCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Commands/HelpCommand.html">HelpCommand</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Telegram_Bot_Exceptions" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Telegram/Bot/Exceptions.html">Exceptions</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Telegram_Bot_Exceptions_TelegramOtherException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Exceptions/TelegramOtherException.html">TelegramOtherException</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Exceptions_TelegramResponseException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Exceptions/TelegramResponseException.html">TelegramResponseException</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Exceptions_TelegramSDKException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Exceptions/TelegramSDKException.html">TelegramSDKException</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Exceptions_TelegramUndefinedPropertyException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Exceptions/TelegramUndefinedPropertyException.html">TelegramUndefinedPropertyException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Telegram_Bot_FileUpload" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Telegram/Bot/FileUpload.html">FileUpload</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Telegram_Bot_FileUpload_InputFile" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/FileUpload/InputFile.html">InputFile</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Telegram_Bot_HttpClients" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Telegram/Bot/HttpClients.html">HttpClients</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Telegram_Bot_HttpClients_GuzzleHttpClient" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/HttpClients/GuzzleHttpClient.html">GuzzleHttpClient</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_HttpClients_HttpClientInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/HttpClients/HttpClientInterface.html">HttpClientInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Telegram_Bot_Laravel" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Telegram/Bot/Laravel.html">Laravel</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Telegram_Bot_Laravel_Facades" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Telegram/Bot/Laravel/Facades.html">Facades</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Telegram_Bot_Laravel_Facades_Telegram" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Telegram/Bot/Laravel/Facades/Telegram.html">Telegram</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Telegram_Bot_Laravel_TelegramServiceProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Laravel/TelegramServiceProvider.html">TelegramServiceProvider</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Telegram_Bot_Objects" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Telegram/Bot/Objects.html">Objects</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Telegram_Bot_Objects_Audio" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Objects/Audio.html">Audio</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Objects_BaseObject" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Objects/BaseObject.html">BaseObject</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Objects_Contact" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Objects/Contact.html">Contact</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Objects_Document" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Objects/Document.html">Document</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Objects_GroupChat" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Objects/GroupChat.html">GroupChat</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Objects_Location" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Objects/Location.html">Location</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Objects_Message" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Objects/Message.html">Message</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Objects_PhotoSize" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Objects/PhotoSize.html">PhotoSize</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Objects_Sticker" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Objects/Sticker.html">Sticker</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Objects_Update" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Objects/Update.html">Update</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Objects_User" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Objects/User.html">User</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Objects_UserProfilePhotos" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Objects/UserProfilePhotos.html">UserProfilePhotos</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Objects_Video" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Objects/Video.html">Video</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Objects_Voice" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Telegram/Bot/Objects/Voice.html">Voice</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Telegram_Bot_Actions" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Telegram/Bot/Actions.html">Actions</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_Api" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Telegram/Bot/Api.html">Api</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_TelegramClient" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Telegram/Bot/TelegramClient.html">TelegramClient</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_TelegramRequest" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Telegram/Bot/TelegramRequest.html">TelegramRequest</a>                    </div>                </li>                            <li data-name="class:Telegram_Bot_TelegramResponse" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Telegram/Bot/TelegramResponse.html">TelegramResponse</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": "Telegram.html", "name": "Telegram", "doc": "Namespace Telegram"},{"type": "Namespace", "link": "Telegram/Bot.html", "name": "Telegram\\Bot", "doc": "Namespace Telegram\\Bot"},{"type": "Namespace", "link": "Telegram/Bot/Commands.html", "name": "Telegram\\Bot\\Commands", "doc": "Namespace Telegram\\Bot\\Commands"},{"type": "Namespace", "link": "Telegram/Bot/Exceptions.html", "name": "Telegram\\Bot\\Exceptions", "doc": "Namespace Telegram\\Bot\\Exceptions"},{"type": "Namespace", "link": "Telegram/Bot/FileUpload.html", "name": "Telegram\\Bot\\FileUpload", "doc": "Namespace Telegram\\Bot\\FileUpload"},{"type": "Namespace", "link": "Telegram/Bot/HttpClients.html", "name": "Telegram\\Bot\\HttpClients", "doc": "Namespace Telegram\\Bot\\HttpClients"},{"type": "Namespace", "link": "Telegram/Bot/Laravel.html", "name": "Telegram\\Bot\\Laravel", "doc": "Namespace Telegram\\Bot\\Laravel"},{"type": "Namespace", "link": "Telegram/Bot/Laravel/Facades.html", "name": "Telegram\\Bot\\Laravel\\Facades", "doc": "Namespace Telegram\\Bot\\Laravel\\Facades"},{"type": "Namespace", "link": "Telegram/Bot/Objects.html", "name": "Telegram\\Bot\\Objects", "doc": "Namespace Telegram\\Bot\\Objects"},
            {"type": "Interface", "fromName": "Telegram\\Bot\\Commands", "fromLink": "Telegram/Bot/Commands.html", "link": "Telegram/Bot/Commands/CommandInterface.html", "name": "Telegram\\Bot\\Commands\\CommandInterface", "doc": "&quot;Interface CommandInterface&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\CommandInterface", "fromLink": "Telegram/Bot/Commands/CommandInterface.html", "link": "Telegram/Bot/Commands/CommandInterface.html#method_make", "name": "Telegram\\Bot\\Commands\\CommandInterface::make", "doc": "&quot;Process Inbound Command.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\CommandInterface", "fromLink": "Telegram/Bot/Commands/CommandInterface.html", "link": "Telegram/Bot/Commands/CommandInterface.html#method_handle", "name": "Telegram\\Bot\\Commands\\CommandInterface::handle", "doc": "&quot;Process the command.&quot;"},
            
            {"type": "Interface", "fromName": "Telegram\\Bot\\HttpClients", "fromLink": "Telegram/Bot/HttpClients.html", "link": "Telegram/Bot/HttpClients/HttpClientInterface.html", "name": "Telegram\\Bot\\HttpClients\\HttpClientInterface", "doc": "&quot;Interface HttpClientInterface&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\HttpClients\\HttpClientInterface", "fromLink": "Telegram/Bot/HttpClients/HttpClientInterface.html", "link": "Telegram/Bot/HttpClients/HttpClientInterface.html#method_send", "name": "Telegram\\Bot\\HttpClients\\HttpClientInterface::send", "doc": "&quot;\n&quot;"},
            
            
            {"type": "Class", "fromName": "Telegram\\Bot", "fromLink": "Telegram/Bot.html", "link": "Telegram/Bot/Actions.html", "name": "Telegram\\Bot\\Actions", "doc": "&quot;Class Actions&quot;"},
                    
            {"type": "Class", "fromName": "Telegram\\Bot", "fromLink": "Telegram/Bot.html", "link": "Telegram/Bot/Api.html", "name": "Telegram\\Bot\\Api", "doc": "&quot;Class Api&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method___construct", "name": "Telegram\\Bot\\Api::__construct", "doc": "&quot;Instantiates a new Telegram super-class object.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_getClient", "name": "Telegram\\Bot\\Api::getClient", "doc": "&quot;Returns the TelegramClient service.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_getAccessToken", "name": "Telegram\\Bot\\Api::getAccessToken", "doc": "&quot;Returns Telegram Bot API Access Token.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_getLastResponse", "name": "Telegram\\Bot\\Api::getLastResponse", "doc": "&quot;Returns the last response returned from API request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_setAccessToken", "name": "Telegram\\Bot\\Api::setAccessToken", "doc": "&quot;Sets the bot access token to use with API requests.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_setAsyncRequest", "name": "Telegram\\Bot\\Api::setAsyncRequest", "doc": "&quot;Make this request asynchronous (non-blocking).&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_isAsyncRequest", "name": "Telegram\\Bot\\Api::isAsyncRequest", "doc": "&quot;Check if this is an asynchronous request (non-blocking).&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_getCommandBus", "name": "Telegram\\Bot\\Api::getCommandBus", "doc": "&quot;Returns SDK&#039;s Command Bus.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_addCommand", "name": "Telegram\\Bot\\Api::addCommand", "doc": "&quot;Add Telegram Command to the Command Bus.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_addCommands", "name": "Telegram\\Bot\\Api::addCommands", "doc": "&quot;Add Telegram Commands to the Command Bus.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_getCommands", "name": "Telegram\\Bot\\Api::getCommands", "doc": "&quot;Returns list of available commands.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_getMe", "name": "Telegram\\Bot\\Api::getMe", "doc": "&quot;A simple method for testing your bot&#039;s auth token.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_sendMessage", "name": "Telegram\\Bot\\Api::sendMessage", "doc": "&quot;Send text messages.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_forwardMessage", "name": "Telegram\\Bot\\Api::forwardMessage", "doc": "&quot;Forward messages of any kind.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_sendPhoto", "name": "Telegram\\Bot\\Api::sendPhoto", "doc": "&quot;Send Photos.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_sendAudio", "name": "Telegram\\Bot\\Api::sendAudio", "doc": "&quot;Send regular audio files.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_sendVoice", "name": "Telegram\\Bot\\Api::sendVoice", "doc": "&quot;Send voice audio files.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_sendDocument", "name": "Telegram\\Bot\\Api::sendDocument", "doc": "&quot;Send general files.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_sendSticker", "name": "Telegram\\Bot\\Api::sendSticker", "doc": "&quot;Send .webp stickers.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_sendVideo", "name": "Telegram\\Bot\\Api::sendVideo", "doc": "&quot;Send Video File, Telegram clients support mp4 videos (other formats may be sent as Document).&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_sendLocation", "name": "Telegram\\Bot\\Api::sendLocation", "doc": "&quot;Send point on the map.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_sendChatAction", "name": "Telegram\\Bot\\Api::sendChatAction", "doc": "&quot;Broadcast a Chat Action.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_getUserProfilePhotos", "name": "Telegram\\Bot\\Api::getUserProfilePhotos", "doc": "&quot;Returns a list of profile pictures for a user.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_setWebhook", "name": "Telegram\\Bot\\Api::setWebhook", "doc": "&quot;Set a Webhook to receive incoming updates via an outgoing webhook.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_getWebhookUpdates", "name": "Telegram\\Bot\\Api::getWebhookUpdates", "doc": "&quot;Returns webhook updates sent by Telegram.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_removeWebhook", "name": "Telegram\\Bot\\Api::removeWebhook", "doc": "&quot;Removes the outgoing webhook (if any).&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_getUpdates", "name": "Telegram\\Bot\\Api::getUpdates", "doc": "&quot;Use this method to receive incoming updates using long polling.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_replyKeyboardMarkup", "name": "Telegram\\Bot\\Api::replyKeyboardMarkup", "doc": "&quot;Builds a custom keyboard markup.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_replyKeyboardHide", "name": "Telegram\\Bot\\Api::replyKeyboardHide", "doc": "&quot;Hide the current custom keyboard and display the default letter-keyboard.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_forceReply", "name": "Telegram\\Bot\\Api::forceReply", "doc": "&quot;Display a reply interface to the user (act as if the user has selected the bot\u2018s message and tapped \u2019Reply&#039;).&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_commandsHandler", "name": "Telegram\\Bot\\Api::commandsHandler", "doc": "&quot;Processes Inbound Commands.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_isMessageType", "name": "Telegram\\Bot\\Api::isMessageType", "doc": "&quot;Determine if a given type is the message.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method_detectMessageType", "name": "Telegram\\Bot\\Api::detectMessageType", "doc": "&quot;Detect Message Type Based on Update Object.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Api", "fromLink": "Telegram/Bot/Api.html", "link": "Telegram/Bot/Api.html#method___call", "name": "Telegram\\Bot\\Api::__call", "doc": "&quot;Magic method to process any \&quot;get\&quot; requests.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Commands", "fromLink": "Telegram/Bot/Commands.html", "link": "Telegram/Bot/Commands/Command.html", "name": "Telegram\\Bot\\Commands\\Command", "doc": "&quot;Class Command&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_getName", "name": "Telegram\\Bot\\Commands\\Command::getName", "doc": "&quot;Get Command Name.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_setName", "name": "Telegram\\Bot\\Commands\\Command::setName", "doc": "&quot;Set Command Name.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_getDescription", "name": "Telegram\\Bot\\Commands\\Command::getDescription", "doc": "&quot;Get Command Description.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_setDescription", "name": "Telegram\\Bot\\Commands\\Command::setDescription", "doc": "&quot;Set Command Description.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_getTelegram", "name": "Telegram\\Bot\\Commands\\Command::getTelegram", "doc": "&quot;Returns Telegram Instance.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_getUpdate", "name": "Telegram\\Bot\\Commands\\Command::getUpdate", "doc": "&quot;Returns Original Update.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_getArguments", "name": "Telegram\\Bot\\Commands\\Command::getArguments", "doc": "&quot;Get Arguments passed to the command.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_getCommandBus", "name": "Telegram\\Bot\\Commands\\Command::getCommandBus", "doc": "&quot;Returns an instance of Command Bus.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_make", "name": "Telegram\\Bot\\Commands\\Command::make", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_handle", "name": "Telegram\\Bot\\Commands\\Command::handle", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method___call", "name": "Telegram\\Bot\\Commands\\Command::__call", "doc": "&quot;Magic Method to handle all ReplyWith Methods.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_replyWithMessage", "name": "Telegram\\Bot\\Commands\\Command::replyWithMessage", "doc": "&quot;Reply Chat with a message. You can use all the sendMessage() parameters except chat_id.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_replyWithPhoto", "name": "Telegram\\Bot\\Commands\\Command::replyWithPhoto", "doc": "&quot;Reply Chat with a Photo. You can use all the sendPhoto() parameters except chat_id.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_replyWithAudio", "name": "Telegram\\Bot\\Commands\\Command::replyWithAudio", "doc": "&quot;Reply Chat with an Audio message. You can use all the sendAudio() parameters except chat_id.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_replyWithVideo", "name": "Telegram\\Bot\\Commands\\Command::replyWithVideo", "doc": "&quot;Reply Chat with a Video. You can use all the sendVideo() parameters except chat_id.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_replyWithVoice", "name": "Telegram\\Bot\\Commands\\Command::replyWithVoice", "doc": "&quot;Reply Chat with a Voice message. You can use all the sendVoice() parameters except chat_id.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_replyWithDocument", "name": "Telegram\\Bot\\Commands\\Command::replyWithDocument", "doc": "&quot;Reply Chat with a Document. You can use all the sendDocument() parameters except chat_id.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_replyWithSticker", "name": "Telegram\\Bot\\Commands\\Command::replyWithSticker", "doc": "&quot;Reply Chat with a Sticker. You can use all the sendSticker() parameters except chat_id.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_replyWithLocation", "name": "Telegram\\Bot\\Commands\\Command::replyWithLocation", "doc": "&quot;Reply Chat with a Location. You can use all the sendLocation() parameters except chat_id.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\Command", "fromLink": "Telegram/Bot/Commands/Command.html", "link": "Telegram/Bot/Commands/Command.html#method_replyWithChatAction", "name": "Telegram\\Bot\\Commands\\Command::replyWithChatAction", "doc": "&quot;Reply Chat with a Chat Action. You can use all the sendChatAction() parameters except chat_id.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Commands", "fromLink": "Telegram/Bot/Commands.html", "link": "Telegram/Bot/Commands/CommandBus.html", "name": "Telegram\\Bot\\Commands\\CommandBus", "doc": "&quot;Class CommandBus&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\CommandBus", "fromLink": "Telegram/Bot/Commands/CommandBus.html", "link": "Telegram/Bot/Commands/CommandBus.html#method___construct", "name": "Telegram\\Bot\\Commands\\CommandBus::__construct", "doc": "&quot;Instantiate Command Bus&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\CommandBus", "fromLink": "Telegram/Bot/Commands/CommandBus.html", "link": "Telegram/Bot/Commands/CommandBus.html#method_getCommands", "name": "Telegram\\Bot\\Commands\\CommandBus::getCommands", "doc": "&quot;Returns the list of commands.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\CommandBus", "fromLink": "Telegram/Bot/Commands/CommandBus.html", "link": "Telegram/Bot/Commands/CommandBus.html#method_addCommands", "name": "Telegram\\Bot\\Commands\\CommandBus::addCommands", "doc": "&quot;Add a list of commands.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\CommandBus", "fromLink": "Telegram/Bot/Commands/CommandBus.html", "link": "Telegram/Bot/Commands/CommandBus.html#method_addCommand", "name": "Telegram\\Bot\\Commands\\CommandBus::addCommand", "doc": "&quot;Add a command to the commands list.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\CommandBus", "fromLink": "Telegram/Bot/Commands/CommandBus.html", "link": "Telegram/Bot/Commands/CommandBus.html#method_removeCommand", "name": "Telegram\\Bot\\Commands\\CommandBus::removeCommand", "doc": "&quot;Remove a command from the list.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\CommandBus", "fromLink": "Telegram/Bot/Commands/CommandBus.html", "link": "Telegram/Bot/Commands/CommandBus.html#method_handler", "name": "Telegram\\Bot\\Commands\\CommandBus::handler", "doc": "&quot;Handles Inbound Messages and Executes Appropriate Command.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\CommandBus", "fromLink": "Telegram/Bot/Commands/CommandBus.html", "link": "Telegram/Bot/Commands/CommandBus.html#method_parseCommand", "name": "Telegram\\Bot\\Commands\\CommandBus::parseCommand", "doc": "&quot;Parse a Command for a Match.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\CommandBus", "fromLink": "Telegram/Bot/Commands/CommandBus.html", "link": "Telegram/Bot/Commands/CommandBus.html#method_execute", "name": "Telegram\\Bot\\Commands\\CommandBus::execute", "doc": "&quot;Execute the command.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Commands", "fromLink": "Telegram/Bot/Commands.html", "link": "Telegram/Bot/Commands/CommandInterface.html", "name": "Telegram\\Bot\\Commands\\CommandInterface", "doc": "&quot;Interface CommandInterface&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\CommandInterface", "fromLink": "Telegram/Bot/Commands/CommandInterface.html", "link": "Telegram/Bot/Commands/CommandInterface.html#method_make", "name": "Telegram\\Bot\\Commands\\CommandInterface::make", "doc": "&quot;Process Inbound Command.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\CommandInterface", "fromLink": "Telegram/Bot/Commands/CommandInterface.html", "link": "Telegram/Bot/Commands/CommandInterface.html#method_handle", "name": "Telegram\\Bot\\Commands\\CommandInterface::handle", "doc": "&quot;Process the command.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Commands", "fromLink": "Telegram/Bot/Commands.html", "link": "Telegram/Bot/Commands/HelpCommand.html", "name": "Telegram\\Bot\\Commands\\HelpCommand", "doc": "&quot;Class HelpCommand&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Commands\\HelpCommand", "fromLink": "Telegram/Bot/Commands/HelpCommand.html", "link": "Telegram/Bot/Commands/HelpCommand.html#method_handle", "name": "Telegram\\Bot\\Commands\\HelpCommand::handle", "doc": "&quot;\n&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Exceptions", "fromLink": "Telegram/Bot/Exceptions.html", "link": "Telegram/Bot/Exceptions/TelegramOtherException.html", "name": "Telegram\\Bot\\Exceptions\\TelegramOtherException", "doc": "&quot;Class TelegramOtherException&quot;"},
                    
            {"type": "Class", "fromName": "Telegram\\Bot\\Exceptions", "fromLink": "Telegram/Bot/Exceptions.html", "link": "Telegram/Bot/Exceptions/TelegramResponseException.html", "name": "Telegram\\Bot\\Exceptions\\TelegramResponseException", "doc": "&quot;Class TelegramResponseException&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Exceptions\\TelegramResponseException", "fromLink": "Telegram/Bot/Exceptions/TelegramResponseException.html", "link": "Telegram/Bot/Exceptions/TelegramResponseException.html#method___construct", "name": "Telegram\\Bot\\Exceptions\\TelegramResponseException::__construct", "doc": "&quot;Creates a TelegramResponseException.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Exceptions\\TelegramResponseException", "fromLink": "Telegram/Bot/Exceptions/TelegramResponseException.html", "link": "Telegram/Bot/Exceptions/TelegramResponseException.html#method_create", "name": "Telegram\\Bot\\Exceptions\\TelegramResponseException::create", "doc": "&quot;A factory for creating the appropriate exception based on the response from Telegram.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Exceptions\\TelegramResponseException", "fromLink": "Telegram/Bot/Exceptions/TelegramResponseException.html", "link": "Telegram/Bot/Exceptions/TelegramResponseException.html#method_getHttpStatusCode", "name": "Telegram\\Bot\\Exceptions\\TelegramResponseException::getHttpStatusCode", "doc": "&quot;Returns the HTTP status code.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Exceptions\\TelegramResponseException", "fromLink": "Telegram/Bot/Exceptions/TelegramResponseException.html", "link": "Telegram/Bot/Exceptions/TelegramResponseException.html#method_getErrorType", "name": "Telegram\\Bot\\Exceptions\\TelegramResponseException::getErrorType", "doc": "&quot;Returns the error type.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Exceptions\\TelegramResponseException", "fromLink": "Telegram/Bot/Exceptions/TelegramResponseException.html", "link": "Telegram/Bot/Exceptions/TelegramResponseException.html#method_getRawResponse", "name": "Telegram\\Bot\\Exceptions\\TelegramResponseException::getRawResponse", "doc": "&quot;Returns the raw response used to create the exception.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Exceptions\\TelegramResponseException", "fromLink": "Telegram/Bot/Exceptions/TelegramResponseException.html", "link": "Telegram/Bot/Exceptions/TelegramResponseException.html#method_getResponseData", "name": "Telegram\\Bot\\Exceptions\\TelegramResponseException::getResponseData", "doc": "&quot;Returns the decoded response used to create the exception.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Exceptions\\TelegramResponseException", "fromLink": "Telegram/Bot/Exceptions/TelegramResponseException.html", "link": "Telegram/Bot/Exceptions/TelegramResponseException.html#method_getResponse", "name": "Telegram\\Bot\\Exceptions\\TelegramResponseException::getResponse", "doc": "&quot;Returns the response entity used to create the exception.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Exceptions", "fromLink": "Telegram/Bot/Exceptions.html", "link": "Telegram/Bot/Exceptions/TelegramSDKException.html", "name": "Telegram\\Bot\\Exceptions\\TelegramSDKException", "doc": "&quot;Class TelegramSDKException&quot;"},
                    
            {"type": "Class", "fromName": "Telegram\\Bot\\Exceptions", "fromLink": "Telegram/Bot/Exceptions.html", "link": "Telegram/Bot/Exceptions/TelegramUndefinedPropertyException.html", "name": "Telegram\\Bot\\Exceptions\\TelegramUndefinedPropertyException", "doc": "&quot;Class TelegramUndefinedPropertyException&quot;"},
                    
            {"type": "Class", "fromName": "Telegram\\Bot\\FileUpload", "fromLink": "Telegram/Bot/FileUpload.html", "link": "Telegram/Bot/FileUpload/InputFile.html", "name": "Telegram\\Bot\\FileUpload\\InputFile", "doc": "&quot;Class InputFile&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\FileUpload\\InputFile", "fromLink": "Telegram/Bot/FileUpload/InputFile.html", "link": "Telegram/Bot/FileUpload/InputFile.html#method___construct", "name": "Telegram\\Bot\\FileUpload\\InputFile::__construct", "doc": "&quot;Creates a new InputFile entity.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\FileUpload\\InputFile", "fromLink": "Telegram/Bot/FileUpload/InputFile.html", "link": "Telegram/Bot/FileUpload/InputFile.html#method_getFileName", "name": "Telegram\\Bot\\FileUpload\\InputFile::getFileName", "doc": "&quot;Return the name of the file.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\FileUpload\\InputFile", "fromLink": "Telegram/Bot/FileUpload/InputFile.html", "link": "Telegram/Bot/FileUpload/InputFile.html#method_open", "name": "Telegram\\Bot\\FileUpload\\InputFile::open", "doc": "&quot;Opens file stream.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\HttpClients", "fromLink": "Telegram/Bot/HttpClients.html", "link": "Telegram/Bot/HttpClients/GuzzleHttpClient.html", "name": "Telegram\\Bot\\HttpClients\\GuzzleHttpClient", "doc": "&quot;Class GuzzleHttpClient&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\HttpClients\\GuzzleHttpClient", "fromLink": "Telegram/Bot/HttpClients/GuzzleHttpClient.html", "link": "Telegram/Bot/HttpClients/GuzzleHttpClient.html#method___construct", "name": "Telegram\\Bot\\HttpClients\\GuzzleHttpClient::__construct", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\HttpClients\\GuzzleHttpClient", "fromLink": "Telegram/Bot/HttpClients/GuzzleHttpClient.html", "link": "Telegram/Bot/HttpClients/GuzzleHttpClient.html#method___destruct", "name": "Telegram\\Bot\\HttpClients\\GuzzleHttpClient::__destruct", "doc": "&quot;Unwrap Promises.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\HttpClients\\GuzzleHttpClient", "fromLink": "Telegram/Bot/HttpClients/GuzzleHttpClient.html", "link": "Telegram/Bot/HttpClients/GuzzleHttpClient.html#method_setClient", "name": "Telegram\\Bot\\HttpClients\\GuzzleHttpClient::setClient", "doc": "&quot;Sets HTTP client.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\HttpClients\\GuzzleHttpClient", "fromLink": "Telegram/Bot/HttpClients/GuzzleHttpClient.html", "link": "Telegram/Bot/HttpClients/GuzzleHttpClient.html#method_send", "name": "Telegram\\Bot\\HttpClients\\GuzzleHttpClient::send", "doc": "&quot;\n&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\HttpClients", "fromLink": "Telegram/Bot/HttpClients.html", "link": "Telegram/Bot/HttpClients/HttpClientInterface.html", "name": "Telegram\\Bot\\HttpClients\\HttpClientInterface", "doc": "&quot;Interface HttpClientInterface&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\HttpClients\\HttpClientInterface", "fromLink": "Telegram/Bot/HttpClients/HttpClientInterface.html", "link": "Telegram/Bot/HttpClients/HttpClientInterface.html#method_send", "name": "Telegram\\Bot\\HttpClients\\HttpClientInterface::send", "doc": "&quot;\n&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Laravel\\Facades", "fromLink": "Telegram/Bot/Laravel/Facades.html", "link": "Telegram/Bot/Laravel/Facades/Telegram.html", "name": "Telegram\\Bot\\Laravel\\Facades\\Telegram", "doc": "&quot;Class Telegram&quot;"},
                    
            {"type": "Class", "fromName": "Telegram\\Bot\\Laravel", "fromLink": "Telegram/Bot/Laravel.html", "link": "Telegram/Bot/Laravel/TelegramServiceProvider.html", "name": "Telegram\\Bot\\Laravel\\TelegramServiceProvider", "doc": "&quot;Class TelegramServiceProvider&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Laravel\\TelegramServiceProvider", "fromLink": "Telegram/Bot/Laravel/TelegramServiceProvider.html", "link": "Telegram/Bot/Laravel/TelegramServiceProvider.html#method_boot", "name": "Telegram\\Bot\\Laravel\\TelegramServiceProvider::boot", "doc": "&quot;Bootstrap the application events.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Laravel\\TelegramServiceProvider", "fromLink": "Telegram/Bot/Laravel/TelegramServiceProvider.html", "link": "Telegram/Bot/Laravel/TelegramServiceProvider.html#method_register", "name": "Telegram\\Bot\\Laravel\\TelegramServiceProvider::register", "doc": "&quot;Register the service provider.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Laravel\\TelegramServiceProvider", "fromLink": "Telegram/Bot/Laravel/TelegramServiceProvider.html", "link": "Telegram/Bot/Laravel/TelegramServiceProvider.html#method_registerTelegram", "name": "Telegram\\Bot\\Laravel\\TelegramServiceProvider::registerTelegram", "doc": "&quot;Initialize Telegram Bot SDK Library with Default Config.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Laravel\\TelegramServiceProvider", "fromLink": "Telegram/Bot/Laravel/TelegramServiceProvider.html", "link": "Telegram/Bot/Laravel/TelegramServiceProvider.html#method_provides", "name": "Telegram\\Bot\\Laravel\\TelegramServiceProvider::provides", "doc": "&quot;Get the services provided by the provider.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Objects", "fromLink": "Telegram/Bot/Objects.html", "link": "Telegram/Bot/Objects/Audio.html", "name": "Telegram\\Bot\\Objects\\Audio", "doc": "&quot;Class Audio&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Audio", "fromLink": "Telegram/Bot/Objects/Audio.html", "link": "Telegram/Bot/Objects/Audio.html#method_relations", "name": "Telegram\\Bot\\Objects\\Audio::relations", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Audio", "fromLink": "Telegram/Bot/Objects/Audio.html", "link": "Telegram/Bot/Objects/Audio.html#method_getFileId", "name": "Telegram\\Bot\\Objects\\Audio::getFileId", "doc": "&quot;Unique identifier for this file.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Audio", "fromLink": "Telegram/Bot/Objects/Audio.html", "link": "Telegram/Bot/Objects/Audio.html#method_getDuration", "name": "Telegram\\Bot\\Objects\\Audio::getDuration", "doc": "&quot;Duration of the audio in seconds as defined by sender.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Audio", "fromLink": "Telegram/Bot/Objects/Audio.html", "link": "Telegram/Bot/Objects/Audio.html#method_getPerformer", "name": "Telegram\\Bot\\Objects\\Audio::getPerformer", "doc": "&quot;(Optional). Performer of the audio as defined by sender or by audio tags.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Audio", "fromLink": "Telegram/Bot/Objects/Audio.html", "link": "Telegram/Bot/Objects/Audio.html#method_getTitle", "name": "Telegram\\Bot\\Objects\\Audio::getTitle", "doc": "&quot;(Optional). Title of the audio as defined by sender or by audio tags.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Audio", "fromLink": "Telegram/Bot/Objects/Audio.html", "link": "Telegram/Bot/Objects/Audio.html#method_getMimeType", "name": "Telegram\\Bot\\Objects\\Audio::getMimeType", "doc": "&quot;(Optional). MIME type of the file as defined by sender.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Audio", "fromLink": "Telegram/Bot/Objects/Audio.html", "link": "Telegram/Bot/Objects/Audio.html#method_getFileSize", "name": "Telegram\\Bot\\Objects\\Audio::getFileSize", "doc": "&quot;(Optional). File size.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Objects", "fromLink": "Telegram/Bot/Objects.html", "link": "Telegram/Bot/Objects/BaseObject.html", "name": "Telegram\\Bot\\Objects\\BaseObject", "doc": "&quot;Class BaseObject&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\BaseObject", "fromLink": "Telegram/Bot/Objects/BaseObject.html", "link": "Telegram/Bot/Objects/BaseObject.html#method___construct", "name": "Telegram\\Bot\\Objects\\BaseObject::__construct", "doc": "&quot;Builds collection entity.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\BaseObject", "fromLink": "Telegram/Bot/Objects/BaseObject.html", "link": "Telegram/Bot/Objects/BaseObject.html#method_relations", "name": "Telegram\\Bot\\Objects\\BaseObject::relations", "doc": "&quot;Property relations.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\BaseObject", "fromLink": "Telegram/Bot/Objects/BaseObject.html", "link": "Telegram/Bot/Objects/BaseObject.html#method_get", "name": "Telegram\\Bot\\Objects\\BaseObject::get", "doc": "&quot;Get an item from the collection by key.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\BaseObject", "fromLink": "Telegram/Bot/Objects/BaseObject.html", "link": "Telegram/Bot/Objects/BaseObject.html#method_mapRelatives", "name": "Telegram\\Bot\\Objects\\BaseObject::mapRelatives", "doc": "&quot;Map property relatives to appropriate objects.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\BaseObject", "fromLink": "Telegram/Bot/Objects/BaseObject.html", "link": "Telegram/Bot/Objects/BaseObject.html#method_getRawResponse", "name": "Telegram\\Bot\\Objects\\BaseObject::getRawResponse", "doc": "&quot;Returns raw response.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\BaseObject", "fromLink": "Telegram/Bot/Objects/BaseObject.html", "link": "Telegram/Bot/Objects/BaseObject.html#method_getRawResult", "name": "Telegram\\Bot\\Objects\\BaseObject::getRawResult", "doc": "&quot;Returns raw result.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\BaseObject", "fromLink": "Telegram/Bot/Objects/BaseObject.html", "link": "Telegram/Bot/Objects/BaseObject.html#method_getStatus", "name": "Telegram\\Bot\\Objects\\BaseObject::getStatus", "doc": "&quot;Get Status of request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\BaseObject", "fromLink": "Telegram/Bot/Objects/BaseObject.html", "link": "Telegram/Bot/Objects/BaseObject.html#method___call", "name": "Telegram\\Bot\\Objects\\BaseObject::__call", "doc": "&quot;Magic method to get properties dynamically.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Objects", "fromLink": "Telegram/Bot/Objects.html", "link": "Telegram/Bot/Objects/Contact.html", "name": "Telegram\\Bot\\Objects\\Contact", "doc": "&quot;Class Contact&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Contact", "fromLink": "Telegram/Bot/Objects/Contact.html", "link": "Telegram/Bot/Objects/Contact.html#method_relations", "name": "Telegram\\Bot\\Objects\\Contact::relations", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Contact", "fromLink": "Telegram/Bot/Objects/Contact.html", "link": "Telegram/Bot/Objects/Contact.html#method_getPhoneNumber", "name": "Telegram\\Bot\\Objects\\Contact::getPhoneNumber", "doc": "&quot;Contact&#039;s phone number.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Contact", "fromLink": "Telegram/Bot/Objects/Contact.html", "link": "Telegram/Bot/Objects/Contact.html#method_getFirstName", "name": "Telegram\\Bot\\Objects\\Contact::getFirstName", "doc": "&quot;Contact&#039;s first name.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Contact", "fromLink": "Telegram/Bot/Objects/Contact.html", "link": "Telegram/Bot/Objects/Contact.html#method_getLastName", "name": "Telegram\\Bot\\Objects\\Contact::getLastName", "doc": "&quot;(Optional). Contact&#039;s last name.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Contact", "fromLink": "Telegram/Bot/Objects/Contact.html", "link": "Telegram/Bot/Objects/Contact.html#method_getUserId", "name": "Telegram\\Bot\\Objects\\Contact::getUserId", "doc": "&quot;(Optional). Contact&#039;s user identifier in Telegram.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Objects", "fromLink": "Telegram/Bot/Objects.html", "link": "Telegram/Bot/Objects/Document.html", "name": "Telegram\\Bot\\Objects\\Document", "doc": "&quot;Class Document&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Document", "fromLink": "Telegram/Bot/Objects/Document.html", "link": "Telegram/Bot/Objects/Document.html#method_relations", "name": "Telegram\\Bot\\Objects\\Document::relations", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Document", "fromLink": "Telegram/Bot/Objects/Document.html", "link": "Telegram/Bot/Objects/Document.html#method_getFileId", "name": "Telegram\\Bot\\Objects\\Document::getFileId", "doc": "&quot;Unique file identifier.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Document", "fromLink": "Telegram/Bot/Objects/Document.html", "link": "Telegram/Bot/Objects/Document.html#method_getThumb", "name": "Telegram\\Bot\\Objects\\Document::getThumb", "doc": "&quot;(Optional). Document thumbnail as defined by sender.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Document", "fromLink": "Telegram/Bot/Objects/Document.html", "link": "Telegram/Bot/Objects/Document.html#method_getFileName", "name": "Telegram\\Bot\\Objects\\Document::getFileName", "doc": "&quot;(Optional). Original filename as defined by sender.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Document", "fromLink": "Telegram/Bot/Objects/Document.html", "link": "Telegram/Bot/Objects/Document.html#method_getMimeType", "name": "Telegram\\Bot\\Objects\\Document::getMimeType", "doc": "&quot;(Optional). MIME type of the file as defined by sender.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Document", "fromLink": "Telegram/Bot/Objects/Document.html", "link": "Telegram/Bot/Objects/Document.html#method_getFileSize", "name": "Telegram\\Bot\\Objects\\Document::getFileSize", "doc": "&quot;(Optional). File size.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Objects", "fromLink": "Telegram/Bot/Objects.html", "link": "Telegram/Bot/Objects/GroupChat.html", "name": "Telegram\\Bot\\Objects\\GroupChat", "doc": "&quot;Class GroupChat&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\GroupChat", "fromLink": "Telegram/Bot/Objects/GroupChat.html", "link": "Telegram/Bot/Objects/GroupChat.html#method_relations", "name": "Telegram\\Bot\\Objects\\GroupChat::relations", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\GroupChat", "fromLink": "Telegram/Bot/Objects/GroupChat.html", "link": "Telegram/Bot/Objects/GroupChat.html#method_getId", "name": "Telegram\\Bot\\Objects\\GroupChat::getId", "doc": "&quot;Unique identifier for this group chat.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\GroupChat", "fromLink": "Telegram/Bot/Objects/GroupChat.html", "link": "Telegram/Bot/Objects/GroupChat.html#method_getTitle", "name": "Telegram\\Bot\\Objects\\GroupChat::getTitle", "doc": "&quot;Group name.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Objects", "fromLink": "Telegram/Bot/Objects.html", "link": "Telegram/Bot/Objects/Location.html", "name": "Telegram\\Bot\\Objects\\Location", "doc": "&quot;Class Location&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Location", "fromLink": "Telegram/Bot/Objects/Location.html", "link": "Telegram/Bot/Objects/Location.html#method_relations", "name": "Telegram\\Bot\\Objects\\Location::relations", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Location", "fromLink": "Telegram/Bot/Objects/Location.html", "link": "Telegram/Bot/Objects/Location.html#method_getLongitude", "name": "Telegram\\Bot\\Objects\\Location::getLongitude", "doc": "&quot;Longitude as defined by sender.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Location", "fromLink": "Telegram/Bot/Objects/Location.html", "link": "Telegram/Bot/Objects/Location.html#method_getLatitude", "name": "Telegram\\Bot\\Objects\\Location::getLatitude", "doc": "&quot;Latitude as defined by sender.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Objects", "fromLink": "Telegram/Bot/Objects.html", "link": "Telegram/Bot/Objects/Message.html", "name": "Telegram\\Bot\\Objects\\Message", "doc": "&quot;Class Message&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_relations", "name": "Telegram\\Bot\\Objects\\Message::relations", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getMessageId", "name": "Telegram\\Bot\\Objects\\Message::getMessageId", "doc": "&quot;Unique message identifier.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getFrom", "name": "Telegram\\Bot\\Objects\\Message::getFrom", "doc": "&quot;Sender.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getDate", "name": "Telegram\\Bot\\Objects\\Message::getDate", "doc": "&quot;Date the message was sent in Unix time.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getChat", "name": "Telegram\\Bot\\Objects\\Message::getChat", "doc": "&quot;Conversation the message belongs to, private or group.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getForwardFrom", "name": "Telegram\\Bot\\Objects\\Message::getForwardFrom", "doc": "&quot;(Optional). For forwarded messages, sender of the original message.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getForwardDate", "name": "Telegram\\Bot\\Objects\\Message::getForwardDate", "doc": "&quot;(Optional). For forwarded messages, date the original message was sent in Unix time.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getReplyToMessage", "name": "Telegram\\Bot\\Objects\\Message::getReplyToMessage", "doc": "&quot;(Optional). For replies, the original message. Note that the Message object in this field will not contain further reply&lt;em&gt;to&lt;\/em&gt;message fields even if it itself is a reply.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getText", "name": "Telegram\\Bot\\Objects\\Message::getText", "doc": "&quot;(Optional). For text messages, the actual UTF-8 text of the message.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getAudio", "name": "Telegram\\Bot\\Objects\\Message::getAudio", "doc": "&quot;(Optional). Message is an audio file, information about the file.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getDocument", "name": "Telegram\\Bot\\Objects\\Message::getDocument", "doc": "&quot;(Optional). Message is a general file, information about the file.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getSticker", "name": "Telegram\\Bot\\Objects\\Message::getSticker", "doc": "&quot;(Optional). Message is a sticker, information about the sticker.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getVideo", "name": "Telegram\\Bot\\Objects\\Message::getVideo", "doc": "&quot;(Optional). Message is a video, information about the video.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getVoice", "name": "Telegram\\Bot\\Objects\\Message::getVoice", "doc": "&quot;(Optional). Message is a voice message, information about the file.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getCaption", "name": "Telegram\\Bot\\Objects\\Message::getCaption", "doc": "&quot;(Optional). Caption for the photo or video contact&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getContact", "name": "Telegram\\Bot\\Objects\\Message::getContact", "doc": "&quot;(Optional). Message is a shared contact, information about the contact.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getLocation", "name": "Telegram\\Bot\\Objects\\Message::getLocation", "doc": "&quot;(Optional). Message is a shared location, information about the location.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getNewChatParticipant", "name": "Telegram\\Bot\\Objects\\Message::getNewChatParticipant", "doc": "&quot;(Optional). A new member was added to the group, information about them (this member may be bot itself).&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getLeftChatParticipant", "name": "Telegram\\Bot\\Objects\\Message::getLeftChatParticipant", "doc": "&quot;(Optional). A member was removed from the group, information about them (this member may be bot itself).&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getNewChatTitle", "name": "Telegram\\Bot\\Objects\\Message::getNewChatTitle", "doc": "&quot;(Optional). A group title was changed to this value.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getDeleteChatPhoto", "name": "Telegram\\Bot\\Objects\\Message::getDeleteChatPhoto", "doc": "&quot;(Optional). Informs that the group photo was deleted.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Message", "fromLink": "Telegram/Bot/Objects/Message.html", "link": "Telegram/Bot/Objects/Message.html#method_getGroupChatCreated", "name": "Telegram\\Bot\\Objects\\Message::getGroupChatCreated", "doc": "&quot;(Optional). Informs that the group has been created.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Objects", "fromLink": "Telegram/Bot/Objects.html", "link": "Telegram/Bot/Objects/PhotoSize.html", "name": "Telegram\\Bot\\Objects\\PhotoSize", "doc": "&quot;Class PhotoSize&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\PhotoSize", "fromLink": "Telegram/Bot/Objects/PhotoSize.html", "link": "Telegram/Bot/Objects/PhotoSize.html#method_relations", "name": "Telegram\\Bot\\Objects\\PhotoSize::relations", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\PhotoSize", "fromLink": "Telegram/Bot/Objects/PhotoSize.html", "link": "Telegram/Bot/Objects/PhotoSize.html#method_getFileId", "name": "Telegram\\Bot\\Objects\\PhotoSize::getFileId", "doc": "&quot;Unique identifier for this file.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\PhotoSize", "fromLink": "Telegram/Bot/Objects/PhotoSize.html", "link": "Telegram/Bot/Objects/PhotoSize.html#method_getWidth", "name": "Telegram\\Bot\\Objects\\PhotoSize::getWidth", "doc": "&quot;Photo width.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\PhotoSize", "fromLink": "Telegram/Bot/Objects/PhotoSize.html", "link": "Telegram/Bot/Objects/PhotoSize.html#method_getHeight", "name": "Telegram\\Bot\\Objects\\PhotoSize::getHeight", "doc": "&quot;Photo height.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\PhotoSize", "fromLink": "Telegram/Bot/Objects/PhotoSize.html", "link": "Telegram/Bot/Objects/PhotoSize.html#method_getFileSize", "name": "Telegram\\Bot\\Objects\\PhotoSize::getFileSize", "doc": "&quot;(Optional). File size.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Objects", "fromLink": "Telegram/Bot/Objects.html", "link": "Telegram/Bot/Objects/Sticker.html", "name": "Telegram\\Bot\\Objects\\Sticker", "doc": "&quot;Class Sticker&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Sticker", "fromLink": "Telegram/Bot/Objects/Sticker.html", "link": "Telegram/Bot/Objects/Sticker.html#method_relations", "name": "Telegram\\Bot\\Objects\\Sticker::relations", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Sticker", "fromLink": "Telegram/Bot/Objects/Sticker.html", "link": "Telegram/Bot/Objects/Sticker.html#method_getFileId", "name": "Telegram\\Bot\\Objects\\Sticker::getFileId", "doc": "&quot;Unique identifier for this file.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Sticker", "fromLink": "Telegram/Bot/Objects/Sticker.html", "link": "Telegram/Bot/Objects/Sticker.html#method_getWidth", "name": "Telegram\\Bot\\Objects\\Sticker::getWidth", "doc": "&quot;Sticker width.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Sticker", "fromLink": "Telegram/Bot/Objects/Sticker.html", "link": "Telegram/Bot/Objects/Sticker.html#method_getHeight", "name": "Telegram\\Bot\\Objects\\Sticker::getHeight", "doc": "&quot;Sticker height.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Sticker", "fromLink": "Telegram/Bot/Objects/Sticker.html", "link": "Telegram/Bot/Objects/Sticker.html#method_getThumb", "name": "Telegram\\Bot\\Objects\\Sticker::getThumb", "doc": "&quot;(Optional). Sticker thumbnail in .webp or .jpg format.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Sticker", "fromLink": "Telegram/Bot/Objects/Sticker.html", "link": "Telegram/Bot/Objects/Sticker.html#method_getFileSize", "name": "Telegram\\Bot\\Objects\\Sticker::getFileSize", "doc": "&quot;(Optional). File size.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Objects", "fromLink": "Telegram/Bot/Objects.html", "link": "Telegram/Bot/Objects/Update.html", "name": "Telegram\\Bot\\Objects\\Update", "doc": "&quot;Class Update&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Update", "fromLink": "Telegram/Bot/Objects/Update.html", "link": "Telegram/Bot/Objects/Update.html#method_relations", "name": "Telegram\\Bot\\Objects\\Update::relations", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Update", "fromLink": "Telegram/Bot/Objects/Update.html", "link": "Telegram/Bot/Objects/Update.html#method_recentMessage", "name": "Telegram\\Bot\\Objects\\Update::recentMessage", "doc": "&quot;Get recent message.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Update", "fromLink": "Telegram/Bot/Objects/Update.html", "link": "Telegram/Bot/Objects/Update.html#method_getUpdateId", "name": "Telegram\\Bot\\Objects\\Update::getUpdateId", "doc": "&quot;The update&#039;s unique identifier. Update identifiers start from a certain positive number and increase sequentially.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Update", "fromLink": "Telegram/Bot/Objects/Update.html", "link": "Telegram/Bot/Objects/Update.html#method_getMessage", "name": "Telegram\\Bot\\Objects\\Update::getMessage", "doc": "&quot;(Optional). New incoming message of any kind - text, photo, sticker, etc.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Objects", "fromLink": "Telegram/Bot/Objects.html", "link": "Telegram/Bot/Objects/User.html", "name": "Telegram\\Bot\\Objects\\User", "doc": "&quot;Class User&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\User", "fromLink": "Telegram/Bot/Objects/User.html", "link": "Telegram/Bot/Objects/User.html#method_relations", "name": "Telegram\\Bot\\Objects\\User::relations", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\User", "fromLink": "Telegram/Bot/Objects/User.html", "link": "Telegram/Bot/Objects/User.html#method_getId", "name": "Telegram\\Bot\\Objects\\User::getId", "doc": "&quot;Unique identifier for this user or bot.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\User", "fromLink": "Telegram/Bot/Objects/User.html", "link": "Telegram/Bot/Objects/User.html#method_getFirstName", "name": "Telegram\\Bot\\Objects\\User::getFirstName", "doc": "&quot;User&#039;s or bot&#039;s first name.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\User", "fromLink": "Telegram/Bot/Objects/User.html", "link": "Telegram/Bot/Objects/User.html#method_getLastName", "name": "Telegram\\Bot\\Objects\\User::getLastName", "doc": "&quot;(Optional). User&#039;s or bot&#039;s last name.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\User", "fromLink": "Telegram/Bot/Objects/User.html", "link": "Telegram/Bot/Objects/User.html#method_getUsername", "name": "Telegram\\Bot\\Objects\\User::getUsername", "doc": "&quot;(Optional). User&#039;s or bot&#039;s username.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Objects", "fromLink": "Telegram/Bot/Objects.html", "link": "Telegram/Bot/Objects/UserProfilePhotos.html", "name": "Telegram\\Bot\\Objects\\UserProfilePhotos", "doc": "&quot;Class UserProfilePhotos&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\UserProfilePhotos", "fromLink": "Telegram/Bot/Objects/UserProfilePhotos.html", "link": "Telegram/Bot/Objects/UserProfilePhotos.html#method_relations", "name": "Telegram\\Bot\\Objects\\UserProfilePhotos::relations", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\UserProfilePhotos", "fromLink": "Telegram/Bot/Objects/UserProfilePhotos.html", "link": "Telegram/Bot/Objects/UserProfilePhotos.html#method_getTotalCount", "name": "Telegram\\Bot\\Objects\\UserProfilePhotos::getTotalCount", "doc": "&quot;Total number of profile pictures the target user has.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Objects", "fromLink": "Telegram/Bot/Objects.html", "link": "Telegram/Bot/Objects/Video.html", "name": "Telegram\\Bot\\Objects\\Video", "doc": "&quot;Class Video&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Video", "fromLink": "Telegram/Bot/Objects/Video.html", "link": "Telegram/Bot/Objects/Video.html#method_relations", "name": "Telegram\\Bot\\Objects\\Video::relations", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Video", "fromLink": "Telegram/Bot/Objects/Video.html", "link": "Telegram/Bot/Objects/Video.html#method_getFileId", "name": "Telegram\\Bot\\Objects\\Video::getFileId", "doc": "&quot;Unique identifier for this file.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Video", "fromLink": "Telegram/Bot/Objects/Video.html", "link": "Telegram/Bot/Objects/Video.html#method_getWidth", "name": "Telegram\\Bot\\Objects\\Video::getWidth", "doc": "&quot;Video width as defined by sender.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Video", "fromLink": "Telegram/Bot/Objects/Video.html", "link": "Telegram/Bot/Objects/Video.html#method_getHeight", "name": "Telegram\\Bot\\Objects\\Video::getHeight", "doc": "&quot;Video height as defined by sender.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Video", "fromLink": "Telegram/Bot/Objects/Video.html", "link": "Telegram/Bot/Objects/Video.html#method_getDuration", "name": "Telegram\\Bot\\Objects\\Video::getDuration", "doc": "&quot;Duration of the video in seconds as defined by sender.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Video", "fromLink": "Telegram/Bot/Objects/Video.html", "link": "Telegram/Bot/Objects/Video.html#method_getThumb", "name": "Telegram\\Bot\\Objects\\Video::getThumb", "doc": "&quot;(Optional). Video thumbnail.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Video", "fromLink": "Telegram/Bot/Objects/Video.html", "link": "Telegram/Bot/Objects/Video.html#method_getMimeType", "name": "Telegram\\Bot\\Objects\\Video::getMimeType", "doc": "&quot;(Optional). Mime type of a file as defined by sender.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Video", "fromLink": "Telegram/Bot/Objects/Video.html", "link": "Telegram/Bot/Objects/Video.html#method_getFileSize", "name": "Telegram\\Bot\\Objects\\Video::getFileSize", "doc": "&quot;(Optional). File size.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot\\Objects", "fromLink": "Telegram/Bot/Objects.html", "link": "Telegram/Bot/Objects/Voice.html", "name": "Telegram\\Bot\\Objects\\Voice", "doc": "&quot;Class Voice&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Voice", "fromLink": "Telegram/Bot/Objects/Voice.html", "link": "Telegram/Bot/Objects/Voice.html#method_relations", "name": "Telegram\\Bot\\Objects\\Voice::relations", "doc": "&quot;\n&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Voice", "fromLink": "Telegram/Bot/Objects/Voice.html", "link": "Telegram/Bot/Objects/Voice.html#method_getFileId", "name": "Telegram\\Bot\\Objects\\Voice::getFileId", "doc": "&quot;Unique identifier for this file.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Voice", "fromLink": "Telegram/Bot/Objects/Voice.html", "link": "Telegram/Bot/Objects/Voice.html#method_getDuration", "name": "Telegram\\Bot\\Objects\\Voice::getDuration", "doc": "&quot;Duration of the audio in seconds as defined by sender.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Voice", "fromLink": "Telegram/Bot/Objects/Voice.html", "link": "Telegram/Bot/Objects/Voice.html#method_getMimeType", "name": "Telegram\\Bot\\Objects\\Voice::getMimeType", "doc": "&quot;(Optional). MIME type of the file as defined by sender.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\Objects\\Voice", "fromLink": "Telegram/Bot/Objects/Voice.html", "link": "Telegram/Bot/Objects/Voice.html#method_getFileSize", "name": "Telegram\\Bot\\Objects\\Voice::getFileSize", "doc": "&quot;(Optional). File size.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot", "fromLink": "Telegram/Bot.html", "link": "Telegram/Bot/TelegramClient.html", "name": "Telegram\\Bot\\TelegramClient", "doc": "&quot;Class TelegramClient&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\TelegramClient", "fromLink": "Telegram/Bot/TelegramClient.html", "link": "Telegram/Bot/TelegramClient.html#method___construct", "name": "Telegram\\Bot\\TelegramClient::__construct", "doc": "&quot;Instantiates a new TelegramClient object.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramClient", "fromLink": "Telegram/Bot/TelegramClient.html", "link": "Telegram/Bot/TelegramClient.html#method_setHttpClientHandler", "name": "Telegram\\Bot\\TelegramClient::setHttpClientHandler", "doc": "&quot;Sets the HTTP client handler.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramClient", "fromLink": "Telegram/Bot/TelegramClient.html", "link": "Telegram/Bot/TelegramClient.html#method_getHttpClientHandler", "name": "Telegram\\Bot\\TelegramClient::getHttpClientHandler", "doc": "&quot;Returns the HTTP client handler.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramClient", "fromLink": "Telegram/Bot/TelegramClient.html", "link": "Telegram/Bot/TelegramClient.html#method_getBaseBotUrl", "name": "Telegram\\Bot\\TelegramClient::getBaseBotUrl", "doc": "&quot;Returns the base Bot URL.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramClient", "fromLink": "Telegram/Bot/TelegramClient.html", "link": "Telegram/Bot/TelegramClient.html#method_prepareRequest", "name": "Telegram\\Bot\\TelegramClient::prepareRequest", "doc": "&quot;Prepares the API request for sending to the client handler.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramClient", "fromLink": "Telegram/Bot/TelegramClient.html", "link": "Telegram/Bot/TelegramClient.html#method_sendRequest", "name": "Telegram\\Bot\\TelegramClient::sendRequest", "doc": "&quot;Send an API request and process the result.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot", "fromLink": "Telegram/Bot.html", "link": "Telegram/Bot/TelegramRequest.html", "name": "Telegram\\Bot\\TelegramRequest", "doc": "&quot;Class TelegramRequest&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method___construct", "name": "Telegram\\Bot\\TelegramRequest::__construct", "doc": "&quot;Creates a new Request entity.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_setAccessToken", "name": "Telegram\\Bot\\TelegramRequest::setAccessToken", "doc": "&quot;Set the bot access token for this request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_getAccessToken", "name": "Telegram\\Bot\\TelegramRequest::getAccessToken", "doc": "&quot;Return the bot access token for this request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_validateAccessToken", "name": "Telegram\\Bot\\TelegramRequest::validateAccessToken", "doc": "&quot;Validate that bot access token exists for this request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_setMethod", "name": "Telegram\\Bot\\TelegramRequest::setMethod", "doc": "&quot;Set the HTTP method for this request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_getMethod", "name": "Telegram\\Bot\\TelegramRequest::getMethod", "doc": "&quot;Return the HTTP method for this request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_validateMethod", "name": "Telegram\\Bot\\TelegramRequest::validateMethod", "doc": "&quot;Validate that the HTTP method is set.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_setEndpoint", "name": "Telegram\\Bot\\TelegramRequest::setEndpoint", "doc": "&quot;Set the endpoint for this request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_getEndpoint", "name": "Telegram\\Bot\\TelegramRequest::getEndpoint", "doc": "&quot;Return the API Endpoint for this request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_setParams", "name": "Telegram\\Bot\\TelegramRequest::setParams", "doc": "&quot;Set the params for this request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_getParams", "name": "Telegram\\Bot\\TelegramRequest::getParams", "doc": "&quot;Return the params for this request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_setHeaders", "name": "Telegram\\Bot\\TelegramRequest::setHeaders", "doc": "&quot;Set the headers for this request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_getHeaders", "name": "Telegram\\Bot\\TelegramRequest::getHeaders", "doc": "&quot;Return the headers for this request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_setAsyncRequest", "name": "Telegram\\Bot\\TelegramRequest::setAsyncRequest", "doc": "&quot;Make this request asynchronous (non-blocking).&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_isAsyncRequest", "name": "Telegram\\Bot\\TelegramRequest::isAsyncRequest", "doc": "&quot;Check if this is an asynchronous request (non-blocking).&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_getPostParams", "name": "Telegram\\Bot\\TelegramRequest::getPostParams", "doc": "&quot;Only return params on POST requests.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramRequest", "fromLink": "Telegram/Bot/TelegramRequest.html", "link": "Telegram/Bot/TelegramRequest.html#method_getDefaultHeaders", "name": "Telegram\\Bot\\TelegramRequest::getDefaultHeaders", "doc": "&quot;The default headers used with every request.&quot;"},
            
            {"type": "Class", "fromName": "Telegram\\Bot", "fromLink": "Telegram/Bot.html", "link": "Telegram/Bot/TelegramResponse.html", "name": "Telegram\\Bot\\TelegramResponse", "doc": "&quot;Class TelegramResponse&quot;"},
                                                        {"type": "Method", "fromName": "Telegram\\Bot\\TelegramResponse", "fromLink": "Telegram/Bot/TelegramResponse.html", "link": "Telegram/Bot/TelegramResponse.html#method___construct", "name": "Telegram\\Bot\\TelegramResponse::__construct", "doc": "&quot;Gets the relevant data from the Http client.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramResponse", "fromLink": "Telegram/Bot/TelegramResponse.html", "link": "Telegram/Bot/TelegramResponse.html#method_getRequest", "name": "Telegram\\Bot\\TelegramResponse::getRequest", "doc": "&quot;Return the original request that returned this response.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramResponse", "fromLink": "Telegram/Bot/TelegramResponse.html", "link": "Telegram/Bot/TelegramResponse.html#method_getHttpStatusCode", "name": "Telegram\\Bot\\TelegramResponse::getHttpStatusCode", "doc": "&quot;Gets the HTTP status code.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramResponse", "fromLink": "Telegram/Bot/TelegramResponse.html", "link": "Telegram/Bot/TelegramResponse.html#method_getEndpoint", "name": "Telegram\\Bot\\TelegramResponse::getEndpoint", "doc": "&quot;Gets the Request Endpoint used to get the response.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramResponse", "fromLink": "Telegram/Bot/TelegramResponse.html", "link": "Telegram/Bot/TelegramResponse.html#method_getAccessToken", "name": "Telegram\\Bot\\TelegramResponse::getAccessToken", "doc": "&quot;Return the bot access token that was used for this request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramResponse", "fromLink": "Telegram/Bot/TelegramResponse.html", "link": "Telegram/Bot/TelegramResponse.html#method_getHeaders", "name": "Telegram\\Bot\\TelegramResponse::getHeaders", "doc": "&quot;Return the HTTP headers for this response.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramResponse", "fromLink": "Telegram/Bot/TelegramResponse.html", "link": "Telegram/Bot/TelegramResponse.html#method_getBody", "name": "Telegram\\Bot\\TelegramResponse::getBody", "doc": "&quot;Return the raw body response.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramResponse", "fromLink": "Telegram/Bot/TelegramResponse.html", "link": "Telegram/Bot/TelegramResponse.html#method_getDecodedBody", "name": "Telegram\\Bot\\TelegramResponse::getDecodedBody", "doc": "&quot;Return the decoded body response.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramResponse", "fromLink": "Telegram/Bot/TelegramResponse.html", "link": "Telegram/Bot/TelegramResponse.html#method_isError", "name": "Telegram\\Bot\\TelegramResponse::isError", "doc": "&quot;Checks if response is an error.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramResponse", "fromLink": "Telegram/Bot/TelegramResponse.html", "link": "Telegram/Bot/TelegramResponse.html#method_throwException", "name": "Telegram\\Bot\\TelegramResponse::throwException", "doc": "&quot;Throws the exception.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramResponse", "fromLink": "Telegram/Bot/TelegramResponse.html", "link": "Telegram/Bot/TelegramResponse.html#method_makeException", "name": "Telegram\\Bot\\TelegramResponse::makeException", "doc": "&quot;Instantiates an exception to be thrown later.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramResponse", "fromLink": "Telegram/Bot/TelegramResponse.html", "link": "Telegram/Bot/TelegramResponse.html#method_getThrownException", "name": "Telegram\\Bot\\TelegramResponse::getThrownException", "doc": "&quot;Returns the exception that was thrown for this request.&quot;"},
                    {"type": "Method", "fromName": "Telegram\\Bot\\TelegramResponse", "fromLink": "Telegram/Bot/TelegramResponse.html", "link": "Telegram/Bot/TelegramResponse.html#method_decodeBody", "name": "Telegram\\Bot\\TelegramResponse::decodeBody", "doc": "&quot;Converts raw API response to proper decoded response.&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


